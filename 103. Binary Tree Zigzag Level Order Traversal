/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>>ans;
        if(!root) return ans;

        bool flag = true;

        queue<TreeNode*>q;

        q.push(root);

        while(!q.empty())
        {
            int size = q.size();

            vector<int>v(size, 0);
            for(int i=0; i<size; i++)
            {
                TreeNode* temp = q.front();
                q.pop();

                int index = flag ? i : size-i-1;

                v[index] = temp->val;

                if(temp->left) q.push(temp->left);

                if(temp->right) q.push(temp->right);

            }

            ans.push_back(v);
            flag = !flag;
        }

        return ans;
    }
};
